fn canPlaceQueen(r, c, x) -> yes {
    true -> yes;
    0 -> i;
    while(i < r) {
        x:i -> qcol;
        if qcol = c || (i - r = qcol - c) || (i - r = c - qcol) {
            false -> yes;
            return;
        }
        i + 1 -> i;
    }
}

fn printQueens(N, x) {
    for row in x {
        0 -> j;
        while j < N {
            if row = j {
                pr "Q ";
            } else {
                pr "* ";
            }
            j + 1 -> j;
        }
        say "\n";
    }
}

fn placeNQueens(r, n, x) {
    if r = n {
        printQueens(n, x);
        exit 1;
    }

    0 -> c;
    while c < n {
        if canPlaceQueen(r, c, x) {
            c -> x:r;
            placeNQueens(r + 1, n, x);
        }
        c + 1 -> c;
    }
}

start {
    arg(0) -> N;
    ;;; Initialize x as N-length array of -1 (unset columns)
    [] -> x;
    repeat N times {
        -1 -> $x;
    }
    placeNQueens(0, N, x);
}
