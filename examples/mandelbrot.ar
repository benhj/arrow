fn char_length(chars) -> len {
    0 -> len;
    for i in chars { 
        len + 1 -> len; 
    }
}

;;; this should read 'not-quite-mandelbrot'
;;; there is a bug somewhere that means it doesn't
;;; quite look as it should do; likely in the
;;; arrow interpretor itself.
start {

    0.0 - 1 -> minX;
    1 -> maxX;
    78 -> width;
    36 -> height;
    2.0 -> aspectRatio;

    " .,-:;i+hHM$*#@ " -> chars;
    char_length(chars) -> nchars;

    maxX - (minX * height) / (width * aspectRatio) -> yScale;
    0 -> y;
    while (y < height) {
        0 -> x;
        "" -> output;
        while (x < width) {

            minX + x * (maxX - minX) / width -> c_re;
            (y * yScale) / height - yScale / 2.0 -> c_im;
            c_re -> a;
            c_im -> b;
            0 -> i;
            while(i < nchars) {
                sqrt(a * a + b * b) -> sum;
                if(sum > 2.0) {
                    break;
                }
                a -> a_;
                b -> b_;
                a_ * a_ - b_ * b_ + c_re -> a;
                2 * a_ * b_ + c_im -> b;
                i + 1 -> i;
            }
            if(i = nchars) {
                i - 1 -> i;
            }
            output + chars[i] -> output;
            x + 1 -> x;
        }
        prn output;
        y + 1 -> y;
    }
}